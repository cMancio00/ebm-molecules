model:
  # hparams mcmc
  mcmc_steps_tr: 20
  mcmc_learning_rate_tr: 10.0
  mcmc_steps_gen: 1024
  mcmc_learning_rate_gen: 1.0
  # hparams loss
  alpha_penalty: 0.1
  alpha_ce: 1
  alpha_cd: 1
  # hparams optimizer
  optimizer_type: sgd
  lr: 0.1
  beta1: 0.0
  lr_step_size: 5
  gamma: 0.99

  sampler:
    class_path: samplers.ImageSampler
    init_args:
      max_len_buffer: 10000
  nn_model:
    class_path: nn_models.cnn.SmallCNN
    init_args:
      in_shape: [1, 28, 28]
      n_outputs: 10
      conv_hidden_channels_list: [ 16, 32, 64]
      full_hidden_neurons_list: [ 64 ]

data:
  class_path: data_modules.MNISTDataModule
  init_args:
    batch_size: 521
    num_workers: 8
    data_dir: './datasets'

trainer:
  accelerator: gpu
  devices: auto
  max_epochs: 21
  gradient_clip_val: 0
  callbacks:
    - class_path: utils.callbacks.BufferSamplerCallback
    - class_path: utils.callbacks.GenerateCallback
    - class_path: utils.callbacks.SpectralNormalizationCallback
  logger:
    class_path: TensorBoardLogger
    init_args:
      save_dir: .
      name: MNIST_logs
  profiler: simple
